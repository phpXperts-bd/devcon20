server {
    # Set the port to listen on and the server name
    listen 80;
    listen [::]:80;
    server_tokens off;
    
    # Set the document root of the project
    root /var/www/app/public;

    # Set the directory index files
    index index.php index.html index.htm;

    # Make site accessible from http://phpxperts/
    server_name phpxperts.net;

    location ~ /.well-known/acme-challenge {
            allow all;
            root /var/www/app/public;
    }

    # Turn this location and the following ssl server block off while setting up certbot for first time
    location / {
        rewrite ^ https://$host$request_uri? permanent;
    }
}

server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2;
    server_tokens off;

    # Set the document root of the project
    root /var/www/app/public;

    # Set the directory index files
    index index.php index.html index.htm;

    # Make site accessible from http://localhost/
    server_name phpxperts.net;

    # Specify the default character set
    charset utf-8;

    # reduce the data that needs to be sent over network
    gzip on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml application/json text/javascript application/x-javascript application/xml;
    gzip_disable "MSIE [1-6]\.";

    ssl_certificate /etc/letsencrypt/live/phpxperts.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/phpxperts.net/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;

        try_files $uri $uri/ /index.php$is_args$args;
    }

    # Specify the details of favicon.ico
    location = /favicon.ico { access_log off; log_not_found off; }

    # Specify the details of robots.txt
    location = /robots.txt  { access_log off; log_not_found off; }

    # Specify the logging configuration
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # pass the PHP scripts to FastCGI server listening on socket
    #
    location ~ \.php$ {
        try_files $uri /index.php =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/run/php/php7.3-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 256 16k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        client_max_body_size 32M;
    }

    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
            expires           5d;
    }

    # deny access to . files, for security
    #
    location ~ /\. {
            log_not_found off;
            deny all;
    }

    # deny access to .htaccess files
    location ~ /\.ht {
       deny  all;
    }
}